# Guardian Article Classifier

## Project Overview
This project develops a machine learning model to classify articles from The Guardian into predefined categories. It uses a CNN-LSTM hybrid architecture to process and classify text data.

## Key Components
1. Data Collection: Fetching articles from The Guardian API
2. Data Preprocessing: Cleaning and preparing text data for model input
3. Model Development: Creating and training a CNN-LSTM hybrid model
4. Model Evaluation: Assessing the model's performance
5. Prediction: Using the trained model to classify new articles

## Detailed Steps

### 1. Data Collection
- Utilized The Guardian API to fetch articles
- Implemented rate limiting and error handling for robust data collection
- Stored fetched articles in a CSV file for further processing

### 2. Data Preprocessing
- Cleaned text data by removing special characters and converting to lowercase
- Tokenized the text and removed stop words
- Encoded article categories using LabelEncoder
- Padded sequences to ensure uniform input size

### 3. Model Development
We experimented with several model architectures, gradually refining our approach:

#### Initial CNN-LSTM Hybrid Model
- Embedding layer
- Conv1D layers with MaxPooling
- LSTM layer
- Dense layers with dropout for classification

#### Refined CNN-LSTM Hybrid Model
- Adjusted the architecture to reduce overfitting
- Implemented batch normalization
- Increased dropout rates
- Fine-tuned hyperparameters like learning rate and regularization

#### Further Refined CNN-LSTM Hybrid Model
- Simplified the architecture
- Adjusted learning rate schedule
- Increased L2 regularization
- This version showed the best balance between performance and generalization

### 4. Model Evaluation
- Used accuracy and loss metrics during training
- Implemented early stopping to prevent overfitting
- Evaluated the model using classification report and confusion matrix
- Visualized training history to understand model learning patterns

### 5. Prediction
- Developed a function to predict categories for new articles
- Tested the function with sample articles to ensure functionality

## Usage
1. Set up your Guardian API key in a `.env` file
2. Run the data collection script to fetch articles
3. Execute the preprocessing steps
4. Train the model using the provided architecture
5. Evaluate the model's performance
6. Use the trained model to predict categories for new articles

## Files
- `guardian_api_fetch.py`: Script for fetching articles from The Guardian API
- `preprocess.py`: Data preprocessing functions
- `model.py`: CNN-LSTM hybrid model architecture
- `train.py`: Script for training the model
- `evaluate.py`: Functions for model evaluation
- `predict.py`: Script for making predictions on new articles

## Dependencies
- Python 3.7+
- TensorFlow 2.x
- Keras
- NumPy
- Pandas
- Scikit-learn
- Matplotlib
- Seaborn
- NLTK

## Future Improvements
- Experiment with more advanced architectures (e.g., Transformer-based models)
- Implement cross-validation for more robust evaluation
- Explore transfer learning using pre-trained language models
- Develop a web interface for easy article classification

## Contributors
La Shawn Sykes
Frank Hanan

## License
This project is licensed under the MIT License - see the LICENSE file for details.
